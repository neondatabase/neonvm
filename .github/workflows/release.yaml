name: release

on:
  push:
    tags:
      - "v*.*.*"

env:
  KUSTOMIZE_VERSION:        "4.5.7"
  CONTROLLER_TOOLS_VERSION: "0.10.0"
  CODE_GENERATOR_VERSION:   "0.25.4"
  IMG:                      "neondatabase/neonvm-controller"
  IMG_RUNNER:               "neondatabase/neonvm-runner"
  VM_KERNEL_IMAGE:          "neondatabase/vm-kernel"
  VM_KERNEL_VERSION:        "5.15.80"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:

      - id: get_version
        run: echo "version=${{ github.ref_name }}" >> $GITHUB_OUTPUT

      - name: git checkout
        uses: actions/checkout@v3
      - name: install golang
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: generate code and k8s CRDs
        run: |
          git clone --branch=v${{ env.CODE_GENERATOR_VERSION }} --depth=1 https://github.com/kubernetes/code-generator.git ${RUNNER_TEMP}/code-generator
          go install sigs.k8s.io/controller-tools/cmd/controller-gen@v${{ env.CONTROLLER_TOOLS_VERSION }}
          ${RUNNER_TEMP}/code-generator/generate-groups.sh "deepcopy,client,informer,lister" github.com/neondatabase/neonvm/client github.com/neondatabase/neonvm/apis neonvm:v1 --go-header-file hack/boilerplate.go.txt
          controller-gen rbac:roleName=manager-role crd webhook paths="./..." output:crd:artifacts:config=config/crd/bases

      - name: build binaries
        run:  make build

      - name: docker - install qemu
        uses: docker/setup-qemu-action@v2
      - name: docker - setup buildx
        uses: docker/setup-buildx-action@v2
      - name: login to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.NEON_DOCKERHUB_USERNAME }}
          password: ${{ secrets.NEON_DOCKERHUB_PASSWORD }}

      - name: load vm kernel
        run: |
          docker pull --quiet ${{ env.VM_KERNEL_IMAGE }}:${{ env.VM_KERNEL_VERSION }}
          ID=$(docker create ${{ env.VM_KERNEL_IMAGE }}:${{ env.VM_KERNEL_VERSION }} true)
          docker cp ${ID}:/vmlinuz hack/vmlinuz
          docker rm -f ${ID}

      - name: build and push runner image
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          push: true
          #push: ${{ github.event_name != 'pull_request' }}
          file: runner/Dockerfile
          tags: ${{ env.IMG_RUNNER }}:${{ steps.get_version.outputs.version }}

      - name: build and push controller image
        uses: docker/build-push-action@v3
        with:
          build-args: VM_RUNNER_IMAGE=${{ env.IMG_RUNNER }}:${{ steps.get_version.outputs.version }}
          context: .
          platforms: linux/amd64
          push: true
          #push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.IMG }}:${{ steps.get_version.outputs.version }}

      - name: render kubernetes resources
        uses: stefanprodan/kube-tools@v1
        with:
          kustomize: ${{ env.KUSTOMIZE_VERSION }}
          command: |
            kustomize version --short
            cd config/controller   && kustomize edit set image controller=${{ env.IMG }}:${{ steps.get_version.outputs.version }}
            cd ${GITHUB_WORKSPACE} && kustomize build config/default --output neonvm.yaml

      - name: github release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            neonvm.yaml
            bin/vm-builder
